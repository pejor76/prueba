
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author usuario
 */
public class Play extends javax.swing.JFrame {

    /**
     * Creates new form Play
     */
    private Jugador j1;
    private Jugador j2;
    private int botonesPulsados;
    private int turno;
    private Resultados fin;
    private Menu m;
    private Play p;

    public Play(Jugador j1, Jugador j2, Menu menu) {
        initComponents();
        this.j1 = j1;
        this.j2 = j2;
        jLabel2.setText(j1.getNombre());
        jLabel1.setText(j2.getNombre());
        this.turno = 1;
        this.botonesPulsados = 0;
        this.m = menu;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("jLabel1");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("D1");

        jButton1.setText("-->");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("D2");

        jButton2.setText("-->");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("D3");

        jButton3.setText("-->");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("D1");

        jButton4.setText("-->");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("D2");

        jButton5.setText("-->");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("D3");

        jButton6.setText("-->");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Turno");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("1");
        jScrollPane1.setViewportView(jTextArea1);

        jMenu1.setText("Inicio");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Reiniciar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setAction(jMenu3.getAction());
        jMenu3.setText("Resultados");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6)
                                .addGap(60, 60, 60))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 55, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addGap(126, 126, 126))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j1.setArr(6, respuesta + 1);
            jButton1.setVisible(false);
            jLabel3.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j1.setArr(resInt - 15, respuesta + 1);
                jButton1.setVisible(false);
                jLabel3.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j1.setArr(6, respuesta + 1);
            jButton2.setVisible(false);
            jLabel4.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j1.setArr(resInt - 15, respuesta + 1);
                jButton2.setVisible(false);
                jLabel4.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j1.setArr(6, respuesta + 1);
            jButton3.setVisible(false);
            jLabel5.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j1.setArr(resInt - 15, respuesta + 1);
                jButton3.setVisible(false);
                jLabel5.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j2.setArr(6, respuesta + 1);
            jButton4.setVisible(false);
            jLabel6.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j2.setArr(resInt - 15, respuesta + 1);
                jButton4.setVisible(false);
                jLabel6.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j2.setArr(6, respuesta + 1);
            jButton5.setVisible(false);
            jLabel7.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j2.setArr(resInt - 15, respuesta + 1);
                jButton5.setVisible(false);
                jLabel7.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String res = JOptionPane.showInputDialog(this, "Elige donde ha caido el dardo", "Introduce un valor", JOptionPane.INFORMATION_MESSAGE);
        Object[] opciones = {"Simple", "Doble", "Triple"};
        int respuesta;
        if (res.equalsIgnoreCase("centro")) {
            respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            System.out.println("Has respondido " + respuesta);
            this.j2.setArr(6, respuesta + 1);
            jButton6.setVisible(false);
            jLabel8.setVisible(false);
            botonesPulsados++;
            if (botonesPulsados == 6) {
                jButton1.setVisible(true);
                jLabel3.setVisible(true);
                jButton2.setVisible(true);
                jLabel4.setVisible(true);
                jButton3.setVisible(true);
                jLabel5.setVisible(true);
                jButton4.setVisible(true);
                jLabel6.setVisible(true);
                jButton5.setVisible(true);
                jLabel7.setVisible(true);
                jButton6.setVisible(true);
                jLabel8.setVisible(true);
                turno++;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                jTextArea1.setText("" + this.turno);
                botonesPulsados = 0;
                if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                    System.out.println("terminado");
                    this.fin = new Resultados(j1, j2);
                    this.setVisible(false);
                    this.fin.setVisible(true);
                }
            }
        } else {
            int resInt = Integer.parseInt(res);
            if (resInt >= 15 && resInt <= 20) {
                respuesta = JOptionPane.showOptionDialog(this, "", "Simple, Doble o triple", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
                System.out.println("Has respondido " + respuesta);
                this.j2.setArr(resInt - 15, respuesta + 1);
                jButton6.setVisible(false);
                jLabel8.setVisible(false);
                botonesPulsados++;
                if (botonesPulsados == 6) {
                    jButton1.setVisible(true);
                    jLabel3.setVisible(true);
                    jButton2.setVisible(true);
                    jLabel4.setVisible(true);
                    jButton3.setVisible(true);
                    jLabel5.setVisible(true);
                    jButton4.setVisible(true);
                    jLabel6.setVisible(true);
                    jButton5.setVisible(true);
                    jLabel7.setVisible(true);
                    jButton6.setVisible(true);
                    jLabel8.setVisible(true);
                    turno++;
                    jTextArea1.setText("" + this.turno);
                    botonesPulsados = 0;
                    if (turno == 20 || this.j1.todoCompleto() == 1 || this.j2.todoCompleto() == 2) {
                        System.out.println("terminado");
                        this.fin = new Resultados(j1, j2);
                        this.setVisible(false);
                        this.fin.setVisible(true);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        this.fin = new Resultados(j1, j2);
        this.setVisible(false);
        this.fin.setVisible(true);
    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        this.p = new Play(new Jugador(j1.getNombre()), new Jugador(j2.getNombre()), this.m);
        this.p.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        this.m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Play.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
